<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//ibatis.apache.org//DTD Mapper 3.0//EN" "http://ibatis.apache.org/dtd/ibatis-3-mapper.dtd">
<mapper namespace="com.bms.order.dao.ORDR0403IDao">
    <select id="findPageInfos" parameterType="com.bms.order.common.rest.SearchRestParam" resultType="com.bms.order.bean.result.ORDR0403IRestResult">
        SELECT
        send.SEND_NOTIFICATION_ID AS sendNotifictionID
        , send.SEND_NOTIFICATION_CODE AS sendNotifictionCode
        , send.REAL_DEPART_DATETIME AS realDepartDateTime
        , buyerOrder.BUYER_ORDER_CODE AS buyerOrderCode
        , buyerOrderAtt.LOGISTICS_ZONE_NAME AS logisticsZoneName
        , buyerOrderAtt.BUYER_CODE AS buyerCode
        , buyerOrderAtt.BUYER_NAME AS buyerName
        , send.DISTRIBUTION_PERSON_NAME AS distributionPersonName
        , send.DISTRIBUTION_PERSON_PHONE AS distributionPersonPhone
        , send.DISTRIBUTION_TYPE AS distributionType
        , send.DISTRIBUTION_VEHICLE AS distributionVehicle
        , buyerOrder.BUYER_ORDER_ID AS buyerOrderId
        , send.EXPECTED_ARRIVAL_DATETIME AS expectedArrivalDateTime
        , dis.DISTRIBUTION_NOTIFICATION_CODE AS distributionNotificationCode
        , dis.EXPECTED_SEND_DATETIME AS expectedSendDateTime
        , dis.DISTRIBUTION_NOTIFICATION_ID AS distributionNotificationId
        , dis.DISTRIBUTION_NOTIFICATION_STU AS distributionNotificationStu
        , dis.CRT_TIME AS distributionNotificationTime
        , dis.RECEIVER_NAME AS receiverName
        , dis.RECEIVER_PHONE AS receiverPhone
        , dis.RECEIVER_WECHAT AS receiverWechat
        , dis.RECEIVER_PROVINCE AS receiverProvince
        , dis.RECEIVER_CITY AS receiverCity
        , dis.RECEIVER_DISTRICT AS receiverDistrict
        , dis.RECEIVER_ADDRESS AS receiverAddress
        , dis.RECEIVER_ASSIST_ADDRESS AS receiverAssistAddress
        , dis.DELIVERY_AREA AS deliveryArea
        , dis.PASS_TRAFFIC_MODEL AS passTrafficModel
        , dis.RECEIVE_PERIOD AS receivePeriod
        , dis.RECEIVE_EARLIEST AS receiveEarliest
        , dis.RECEIVE_LATEST AS receiveLatest
        , dis.RECEIVE_WAIT_HOUR AS receiveWaitHour
        , dis.ADVANCED_NOTIFICATION_HOUR AS advancedNotificationHour
        , dis.ANIMAL_QUARANTINE_CERTIFICATION_FLG AS animalQuarantineCertificationFlg
        , dis.STEVEDORE_REQUIREMENT AS stevedoreRequirement
        , dis.PACKAGE_REQUIREMENT AS packageRequirement
        , dis.NEAREST_PARKING_DISTANCE AS nearestParkingDistance
        , dis.REMARK AS remark
        , receive.RECEIVE_TIME AS receiveTime
        FROM
        ORDR_SEND_NOTIFICATION send
        INNER JOIN ORDR_DISTRIBUTION_NOTIFICATION dis
        ON send.DISTRIBUTION_NOTIFICATION_ID = dis.DISTRIBUTION_NOTIFICATION_ID
        INNER JOIN ORDR_BUYER_ORDER buyerOrder
        ON dis.BUYER_ORDER_ID = buyerOrder.BUYER_ORDER_ID
        INNER JOIN ORDR_BUYER_ORDER_ATTACHED buyerOrderAtt
        ON buyerOrder.BUYER_ORDER_ID = buyerOrderAtt.BUYER_ORDER_ID
        LEFT JOIN ORDR_RECEIVE_NOTIFICATION receive
        ON receive.SEND_NOTIFICATION_ID = send.SEND_NOTIFICATION_ID
        WHERE
        send.DEL_FLG = 0
        AND buyerOrder.DEL_FLG = 0
        <!--AND buyerOrderAtt.DEL_FLG = 0-->
        AND dis.DEL_FLG = 0
        <if test="null!=filter.logisticsZoneId and ''!=filter.logisticsZoneId">
            AND buyerOrder.LOGISTICS_ZONE_ID = #{filter.logisticsZoneId}
        </if>
        <if test="null!=filter.buyerOrderCode and ''!=filter.buyerOrderCode">
            AND buyerOrder.BUYER_ORDER_CODE like #{filter.buyerOrderCode}
        </if>
        <if test="null!=filter.buyerCode and ''!=filter.buyerCode">
            AND buyerOrderAtt.BUYER_CODE like #{filter.buyerCode}
        </if>
        <if test="null!=filter.buyerName and ''!=filter.buyerName">
            AND buyerOrderAtt.BUYER_NAME like #{filter.buyerName}
        </if>
        <if test="null!=filter.distributionNotificationCode and ''!=filter.distributionNotificationCode">
            AND dis.DISTRIBUTION_NOTIFICATION_CODE like #{filter.distributionNotificationCode}
        </if>
        <if test="null!=filter.sendNotifictionCode and ''!=filter.sendNotifictionCode">
            AND send.SEND_NOTIFICATION_CODE like #{filter.sendNotifictionCode}
        </if>
        <if test="null!= filter.sendNotifictionId and ''!=filter.sendNotifictionId">
            AND send.SEND_NOTIFICATION_ID = #{filter.sendNotifictionId}
        </if>
        <if test="null!=filter.expectedSendDateTimeFrom and ''!=filter.expectedSendDateTimeFrom">
            AND dis.EXPECTED_SEND_DATETIME <![CDATA[ >=  ]]>#{filter.expectedSendDateTimeFrom}

        </if>
        <if test="null!=filter.expectedSendDateTimeTo and ''!=filter.expectedSendDateTimeTo">
            AND dis.EXPECTED_SEND_DATETIME <![CDATA[ <=  ]]> #{filter.expectedSendDateTimeTo}

        </if>
        <if test="null!=filter.realDepartDatetimeFrom and ''!=filter.realDepartDatetimeFrom">
            AND send.REAL_DEPART_DATETIME <![CDATA[ >=  ]]> #{filter.realDepartDatetimeFrom}

        </if>
        <if test="null!=filter.realDepartDatetimeTo and ''!=filter.realDepartDatetimeTo">
            AND send.REAL_DEPART_DATETIME <![CDATA[ <=  ]]> #{filter.realDepartDatetimeTo}
        </if>
        ORDER BY send.SEND_NOTIFICATION_ID DESC
        <if test="null != pagination">
            LIMIT #{pagination.startPos},#{pagination.pageSize}
        </if>
    </select>


    <select id="findAll" parameterType="com.bms.order.bean.param.ORDR0403IFilterParam" resultType="com.bms.order.bean.result.ORDR0403IDetailsRestResult">
          SELECT
          sendDetail.GOODS_ID AS goodsId
          , sendDetail.SKU AS sku
          , sendDetail.BATCH AS batch
          , sendDetail.REAL_SEND_QUANTITY AS realSendQuantity
          , forcast.BUYER_FORCAST_DELIVER_DETAIL_ID AS buyerForcastDeliverDetailId
          , forcastAttched.ITEM_NAME AS itemName
          , forcastAttched.BRAND_NAME AS brandName
          , forcast.SELL_SIDE_TYPE AS sellSideType
          , forcastAttched.MANUFACTURER_NAME AS manufacturerName
          , forcastAttched.BATCH_CODE AS batchCode
          , forcastAttched.SALE_LABEL_NAME AS saleLabelName
          , forcastAttched.SMALL_PACKAGE_FEATURE AS smallPackageFeature
          , forcastAttched.QUANTITY_PER_PACKAGE AS quantityPerPackage
          , forcastAttched.NET_WEIGHT AS netWeight
          , forcastAttched.GROSS_WEIGHT AS grossWeight
          , forcastAttched.CARTON_SIZE AS cartonSize
          , forcastAttched.PRODUCT_LEVEL AS productLevel
          , forcastAttched.PALLET_STANDARD_STACK_QUANTITY AS palletStandardStackQuantity
          , batchDetail.PRICE_WAY AS priceWay
          , batchDetail.REAL_UNIT_PRICE AS realUnitPrice
          , batchDetail.REAL_KG_PRICE AS realKgPrice
          , batchDetail.GOODS_UNIT AS goodsUnit
          , forcast.PLAN_SEND_QUANTITY AS planSendQuantity

        FROM
          ORDR_SEND_NOTIFICATION_DETAIL sendDetail
          INNER JOIN ORDR_SEND_NOTIFICATION send
            ON sendDetail.SEND_NOTIFICATION_ID = send.SEND_NOTIFICATION_ID
          INNER JOIN ORDR_DISTRIBUTION_NOTIFICATION_DETAIL disDetail
            ON sendDetail.DISTRIBUTION_NOTIFICATION_DETAIL_ID = disDetail.DISTRIBUTION_NOTIFICATION_DETAIL_ID
          INNER JOIN ORDR_BUYER_FORCAST_DELIVER_DETAIL forcast
            ON disDetail.BUYER_FORCAST_DELIVER_DETAIL_ID = forcast.BUYER_FORCAST_DELIVER_DETAIL_ID
          INNER JOIN ORDR_BUYER_FORCAST_DELIVER_DETAIL_ATTACHED forcastAttched
          ON forcast.BUYER_FORCAST_DELIVER_DETAIL_ID = forcastAttched.BUYER_FORCAST_DELIVER_DETAIL_ID
          INNER JOIN ORDR_BUYER_BATCH_ORDER_DETAIL batchDetail
          ON forcast.BUYER_BATCH_ORDER_DETAIL_ID = batchDetail.BUYER_BATCH_ORDER_DETAIL_ID

        WHERE
          send.SEND_NOTIFICATION_ID = #{sendNotifictionId}
          AND sendDetail.DEL_FLG = 0
          AND send.DEL_FLG = 0
          AND disDetail.DEL_FLG = 0
          AND forcast.DEL_FLG = 0
    </select>

    <select id="getTotalCount" parameterType="com.bms.order.common.rest.SearchRestParam" resultType="java.lang.Integer">
        SELECT
        COUNT(1)
        FROM
        ORDR_SEND_NOTIFICATION send
        INNER JOIN ORDR_DISTRIBUTION_NOTIFICATION dis
        ON send.DISTRIBUTION_NOTIFICATION_ID = dis.DISTRIBUTION_NOTIFICATION_ID
        INNER JOIN ORDR_BUYER_ORDER buyerOrder
        ON dis.BUYER_ORDER_ID = buyerOrder.BUYER_ORDER_ID
        INNER JOIN ORDR_BUYER_ORDER_ATTACHED buyerOrderAtt
        ON buyerOrder.BUYER_ORDER_ID = buyerOrderAtt.BUYER_ORDER_ID
        WHERE
        send.DEL_FLG = 0
        AND buyerOrder.DEL_FLG = 0
        <!--AND buyerOrderAtt.DEL_FLG = 0-->
        AND dis.DEL_FLG = 0
        <if test="null!=filter.logisticsZoneId and ''!=filter.logisticsZoneId">
            AND buyerOrder.LOGISTICS_ZONE_ID = #{filter.logisticsZoneId}
        </if>
        <if test="null!=filter.buyerOrderCode and ''!=filter.buyerOrderCode">
            AND buyerOrder.BUYER_ORDER_CODE like #{filter.buyerOrderCode}
        </if>
        <if test="null!=filter.buyerCode and ''!=filter.buyerCode">
            AND buyerOrderAtt.BUYER_CODE like #{filter.buyerCode}
        </if>
        <if test="null!=filter.buyerName and ''!=filter.buyerName">
            AND buyerOrderAtt.BUYER_NAME like #{filter.buyerName}
        </if>
        <if test="null!=filter.distributionNotificationCode and ''!=filter.distributionNotificationCode">
            AND dis.DISTRIBUTION_NOTIFICATION_CODE like #{filter.distributionNotificationCode}
        </if>
        <if test="null!=filter.sendNotifictionCode and ''!=filter.sendNotifictionCode">
            AND send.SEND_NOTIFICATION_CODE like #{filter.sendNotifictionCode}
        </if>
        <if test="null!= filter.sendNotifictionId and ''!=filter.sendNotifictionId">
            AND send.SEND_NOTIFICATION_ID = #{filter.sendNotifictionId}
        </if>
        <if test="null!=filter.expectedSendDateTimeFrom and ''!=filter.expectedSendDateTimeFrom">
            AND dis.EXPECTED_SEND_DATETIME <![CDATA[ >=  ]]>#{filter.expectedSendDateTimeFrom}

        </if>
        <if test="null!=filter.expectedSendDateTimeTo and ''!=filter.expectedSendDateTimeTo">
            AND dis.EXPECTED_SEND_DATETIME <![CDATA[ <=  ]]> #{filter.expectedSendDateTimeTo}

        </if>
        <if test="null!=filter.realDepartDatetimeFrom and ''!=filter.realDepartDatetimeFrom">
            AND send.REAL_DEPART_DATETIME <![CDATA[ >=  ]]> #{filter.realDepartDatetimeFrom}

        </if>
        <if test="null!=filter.realDepartDatetimeTo and ''!=filter.realDepartDatetimeTo">
            AND send.REAL_DEPART_DATETIME <![CDATA[ <=  ]]> #{filter.realDepartDatetimeTo}
        </if>
    </select>

</mapper>